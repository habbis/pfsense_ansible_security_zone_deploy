---
- hosts: pfsense
  remote_user: ansible
  become: yes
  become_method: sudo
  gather_facts: false
  #connection: paramiko
  collections:
    - pfsensible.core
  #become: yes
  #become_method: sudo
  vars:
    network_card: oce1
    vlan: 61
    interface_name: vault

  tasks:
  - name: add vlans pfsense
    pfsense_vlan:
      interface: "{{ network_card }}"
      vlan_id: "{{ vlan }}"
      descr: "{{ interface_name }}"
      priority: 0
      state: present

  - name: Add interface vlan "{{ interface_name }}"
    pfsense_interface:
      interface: "{{ network_card }}.{{ vlan }}"
      descr: "{{ interface_name }}"
      ipv4_type: static
      ipv4_address: "10.31.{{ vlan }}.1"
      enable: True
      state: present

  - name: "allow interface to dns rule"
    pfsense_rule:
     name: 'allow interface to dns servers'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp/udp
     source: "{{ interface_name }}"
     destination: dns_servers
     destination_port: dns_ports
     before: 'bottom'
     state: present

  - name: " allow interface to ntp rule"
    pfsense_rule:
     name: 'allow interface to ntp'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: udp
     destination_port: ntp_ports
     source: "{{ interface_name }}"
     destination: ntp_servers
     #after: 'allow interface to dns rule'
     before: 'bottom'
     state: present

  - name: "allow interface to moncore rule"
    pfsense_rule:
     name: 'allow interface to moncore'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp/udp
     source: "{{ interface_name }}"
     destination: moncore_servers
     destination_port: monitoring_ports
     #after: allow interface to ntp rule
     before: 'bottom'
     state: present

  - name: "allow interface to loghost rule"
    pfsense_rule:
     name: 'allow interface to loghost'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp/udp
     source: "{{ interface_name }}"
     destination: loghost_servers
     destination_port: syslog_ports
     #after: allow interface to moncore rule
     before: 'bottom'
     state: present

  - name: "allow interface to mgmt rule"
    pfsense_rule:
     name: 'allow interface to mgmt'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp
     source: "{{ interface_name }}"
     destination: mgmt_servers
     destination_port: mgmt_ports
     #after: allow interface to loghost rule
     before: 'bottom'
     state: present


  - name: "allow interface to git servers rule"
    pfsense_rule:
     name: 'allow interface to git servers'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp
     source: "{{ interface_name }}"
     destination: git_servers
     destination_port: git_ports
     before: 'bottom'
     state: present

  - name: "allow interface to proxy servers rule"
    pfsense_rule:
     name: 'allow interface to proxy servers'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp
     source: "{{ interface_name }}"
     destination: proxy_servers
     destination_port: proxy_ports
     before: 'bottom'
     state: present

  - name: "allow interface to repository servers rule"
    pfsense_rule:
     name: 'allow interface to repository servers'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp
     source: "{{ interface_name }}"
     destination: repository_servers
     destination_port: repository_ports
     before: 'bottom'
     state: present

  - name: "allow interface to puppet servers rule"
    pfsense_rule:
     name: 'allow interface to puppet servers rule'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp
     source: "{{ interface_name }}"
     destination: puppet_servers
     destination_port: puppet_ports
     after: 'top'
     state: present

  - name: "allow interface to backup servers rule"
    pfsense_rule:
     name: 'allow interface to backup servers rule'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp
     source: "{{ interface_name }}"
     destination: backup_servers
     destination_port: backup_ports
     after: 'top'
     state: present


# uncomment these to allow automation hosts and bastion access.
# i use global floating rules to allow access.

  - name: "allow ansible to interface rule"
    pfsense_rule:
     name: 'allow ansible to interface rule'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp
     source: ansible_servers
     destination: "{{ interface_name }}"
     destination_port: ansible_ports
     after: 'top'
     state: present

  - name: "allow bastion_mgmt to interface rule"
    pfsense_rule:
     name: 'allow bastion_mgmt to interface rule'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp
     source: bastion_servers
     destination: "{{ interface_name }}"
     destination_port: bastion_ports
     after: 'top'
     state: present

  - name: "allow moncore prometheus to interface rule"
    pfsense_rule:
     name: 'allow bastion_mgmt to interface rule'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: tcp
     source: moncore_servers
     destination: "{{ interface_name }}"
     destination_port: remote_monitoring_ports
     after: 'top'
     state: present


  - name: "Add standard block rule"
    pfsense_rule:
     name: 'standard network block'
     action: block
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: any
     source: any
     destination: RFC_1918
     after: 'bottom'
     state: present

  # to allow access to internett change interface to any
  - name: "allow interface to interface rule"
    pfsense_rule:
     name: 'allow interface to interface'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: any
     source: "{{ interface_name }}"
     destination: "{{ interface_name }}"
     before: 'bottom'
     state: present

  - name: "allow interface to internet rule"
    pfsense_rule:
     name: 'allow interface to internet'
     action: pass
     interface: "{{ interface_name }}"
     ipprotocol: inet
     protocol: any
     source: any
     destination: any
     before: 'bottom'
     state: present
